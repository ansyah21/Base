// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.23;

contract EmployedStorage {
    string public name;
    uint public idNumber;

    uint24 private salary;
    uint16 private shares;

    constructor() {   ⛽ infinite gas 309800 gas
        name = "pat";
        idNumber = 112358132134;
        salary = 50000;
        shares = 1000;
    }
    
    function grantShares(uint16 _newShares) external {   ⛽ infinite gas
        require(_newShares <= 5000, "Too many shares");
        shares += _newShares;
    }
    
    function checkForPacking(uint _slot) external view returns (uint result) {   ⛽ infinite gas
        assembly {
            result := sload(_slot)
        }
    }

    function viewShares() external view returns (uint16) {   ⛽ 2568 gas
        return shares;
    }

    function veiwSalary() external view returns (uint24) {   ⛽ 2518 gas
        return salary;
    }

    function debugResetShares() external {   ⛽ 24460 gas
        shares = 1000;
    }
}
